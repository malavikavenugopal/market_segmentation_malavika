---
title: "Market Segmentation Project"
author: "Malavika Venugopal"
format: html
editor: visual
---

# Market Segmentation Project

## 1. Introduction

**Market segmentation** is the process of **dividing a broad consumer or business market** into **sub-groups** of consumers based on some shared characteristics.

#### Purpose

-   Target the right audience

-   Improve marketing efficiency

-   Increase customer satisfaction

-   Boost sales and loyalty

## 2. Data Mining

We have customer data with these columns:

-   **Age**

-   **Gender** (1 = female, 0 = male)

-   **Income**

-   **Married**

-   **Children**

-   **Loan**

-   **Mortgage**

### **How to Segment This Market :**

1.  **By Age Group** – Young, Middle-aged, Senior

2.  **By Income Level** – Low, Medium, High earners

3.  **By Family Status** – Married vs Unmarried

4.  **By Financial Need** – Has loan/mortgage or not

5.  **By Gender** – Male vs Female

### 2.1 Data Exploration

### 2.1.1 Introduction

```{r echo=FALSE, comment=FALSE, message=FALSE}
# We begin most scripts by loading the required packages.
# Here are some initial packages to load and others will be
# identified as we proceed through the script. When writing
# our own scripts we often collect together the library
# commands at the beginning of the script here.

library(rattle)   # Access the weather dataset and utilities.
library(magrittr) # Utilise %>% and %<>% pipeline operators.

# This log generally records the process of building a model. 
# However, with very little effort the log can also be used 
# to score a new dataset. The logical variable 'building' 
# is used to toggle between generating transformations, 
# when building a model and using the transformations, 
# when scoring a dataset.

building <- TRUE
scoring  <- ! building

# A pre-defined value is used to reset the random seed 
# so that results are repeatable.

crv$seed <- 42 

```

```{r echo=FALSE, comment=FALSE, message=FALSE}

# Load a dataset from file.

library(readxl, quietly=TRUE)

 crs$dataset <- read_excel("C:/Users/user/Desktop/MBA-1st Term/IBA/DemoKTC.xlsx", guess_max=1e4)

 crs$dataset

```

```{r echo=FALSE, comment=FALSE, message=FALSE}

# Action the user selections from the Data tab. 

# Build the train/validate/test datasets.

# nobs=30 train=21 validate=4 test=5

set.seed(crv$seed)

crs$nobs <- nrow(crs$dataset)

crs$train <- sample(crs$nobs, 0.7*crs$nobs)

crs$nobs %>%
  seq_len() %>%
  setdiff(crs$train) %>%
  sample(0.15*crs$nobs) ->
crs$validate

crs$nobs %>%
  seq_len() %>%
  setdiff(crs$train) %>%
  setdiff(crs$validate) ->
crs$test

# The following variable selections have been noted.

crs$input     <- c("Age", "Female", "Income", "Married",
                   "Children", "Loan")

crs$numeric   <- c("Age", "Female", "Income", "Married",
                   "Children", "Loan")

crs$categoric <- NULL

crs$target    <- "Mortgage"
crs$risk      <- NULL
crs$ident     <- NULL
crs$ignore    <- NULL
crs$weights   <- NULL
```

```{r}

# Action the user selections from the Data tab. 

# Build the train/validate/test datasets.

# nobs=30 train=21 validate=4 test=5

set.seed(crv$seed)

crs$nobs <- nrow(crs$dataset)

crs$train <- sample(crs$nobs, 0.7*crs$nobs)

crs$nobs %>%
  seq_len() %>%
  setdiff(crs$train) %>%
  sample(0.15*crs$nobs) ->
crs$validate

crs$nobs %>%
  seq_len() %>%
  setdiff(crs$train) %>%
  setdiff(crs$validate) ->
crs$test

# The following variable selections have been noted.

crs$input     <- c("Age", "Female", "Income", "Married",
                   "Children", "Loan", "Mortgage")

crs$numeric   <- c("Age", "Female", "Income", "Married",
                   "Children", "Loan", "Mortgage")

crs$categoric <- NULL

crs$target    <- NULL
crs$risk      <- NULL
crs$ident     <- NULL
crs$ignore    <- NULL
crs$weights   <- NULL

```

### 2.1.2 Summary

#### Summary of Training Dataset

We analyzed 21 observations across 7 numeric variables from the training set. There are no missing values. Variables include Age, Gender (Female), Income, Marital Status, Children, Loan, and Mortgage. Basic statistics such as minimum, maximum, mean, and quartiles (1st and 3rd) help understand the data spread. For example, 25% of individuals are younger than 37, and 75% are younger than 54. Binary variables like Female, Married, Loan, and Mortgage indicate proportions using means.

```{r echo=FALSE, comment=FALSE, message=FALSE}

# The 'Hmisc' package provides the 'contents' function.

library(Hmisc, quietly=TRUE)

# Obtain a summary of the dataset.

contents(crs$dataset[crs$train, c(crs$input, crs$risk, crs$target)])
summary(crs$dataset[crs$train, c(crs$input, crs$risk, crs$target)])

# The 'basicStats' package provides the 'fBasics' function.

library(fBasics, quietly=TRUE)

# Generate a description of the numeric data.

lapply(crs$dataset[crs$train, c(crs$input, crs$risk, crs$target)][,c(1:7)], basicStats)


```

### 2.1.3 **Detailed Summary of Individual Variables**

#### 2.1.3.1. Age

```{r echo=FALSE, comment=FALSE, message=FALSE}
#| label: Box Plot of Age

# Display box plots for the selected variables. 

# Use ggplot2 to generate box plot for Age

# Generate a box plot.

p01 <- crs %>%
  with(dataset[train,]) %>%
  ggplot2::ggplot(ggplot2::aes(y=Age)) +
  ggplot2::geom_boxplot(ggplot2::aes(x="All"), notch=TRUE, fill="grey") +
  ggplot2::stat_summary(ggplot2::aes(x="All"), fun.y=mean, geom="point", shape=8) +
  ggplot2::xlab("Rattle 2025-Jul-16 19:39:56 user") +
  ggplot2::ggtitle("Distribution of Age (sample)") +
  ggplot2::theme(legend.position="none")

# Display the plots.

gridExtra::grid.arrange(p01)
```

**Box Plot of Age**

The box plot of the `Age` variable shows the **distribution of ages** in the training dataset. The **median age is 46**, and the **interquartile range (IQR)** lies between **37 (Q1)** and **54 (Q3)**. This means that the middle 50% of individuals are between 37 and 54 years old.

```{r echo=FALSE, comment=FALSE, message=FALSE}
#| label: Histogram of Age

# Display histogram plots for the selected variables. 

# Use ggplot2 to generate histogram plot for Age

# Generate the plot.

p01 <- crs %>%
  with(dataset[train,]) %>%
  dplyr::select(Age) %>%
  ggplot2::ggplot(ggplot2::aes(x=Age)) +
  ggplot2::geom_density(lty=3) +
  ggplot2::xlab("Age\n\nRattle 2025-Jul-16 19:40:07 user") +
  ggplot2::ggtitle("Distribution of Age (sample)") +
  ggplot2::labs(y="Density")

# Display the plots.

gridExtra::grid.arrange(p01)


```

**Histogram of Age**

The histogram of `Age` shows the **distribution of ages** in the dataset. Most individuals are between **35 and 55 years old**, indicating a concentration in the middle-age range. The distribution appears roughly **symmetric**, with no extreme outliers, suggesting a **balanced age profile** in the sample.

#### 2.1.3.2 Female

```{r echo=FALSE, comment=FALSE, message=FALSE}

library(Hmisc)
describe(crs$dataset$Female)


```

The `Female` variable represents gender in binary form, where `1` indicates **Female** and `0` indicates **Male**. Out of 30 total observations, **17 are Female**, making up **56.67%** of the dataset.

#### 2.1.3.3. Income

```{r echo=FALSE, comment=FALSE, message=FALSE}
#| label: Box Plot of Income


# Display box plots for the selected variables. 

# Use ggplot2 to generate box plot for Income

# Generate a box plot.

p01 <- crs %>%
  with(dataset[train,]) %>%
  ggplot2::ggplot(ggplot2::aes(y=Income)) +
  ggplot2::geom_boxplot(ggplot2::aes(x="All"), notch=TRUE, fill="grey") +
  ggplot2::stat_summary(ggplot2::aes(x="All"), fun.y=mean, geom="point", shape=8) +
  ggplot2::xlab("Rattle 2025-Jul-16 22:23:21 user") +
  ggplot2::ggtitle("Distribution of Income (sample)") +
  ggplot2::theme(legend.position="none")

# Display the plots.

gridExtra::grid.arrange(p01)

```

**Box Plot of Income**

The box plot of `Income` displays the **spread and distribution** of income values in the dataset. The **median income** is around ₹22,523, with the **interquartile range (IQR)** spanning from ₹17,546 (Q1) to ₹29,359 (Q3). The plot also shows a **right-skewed distribution**, with some individuals having significantly higher incomes, indicating the presence of **outliers or high earners** in the sample.

```{r echo=FALSE, comment=FALSE, message=FALSE}
# Display histogram plots for the selected variables. 

# Use ggplot2 to generate histogram plot for Income

# Generate the plot.

p01 <- crs %>%
  with(dataset[train,]) %>%
  dplyr::select(Income) %>%
  ggplot2::ggplot(ggplot2::aes(x=Income)) +
  ggplot2::geom_density(lty=3) +
  ggplot2::xlab("Income\n\nRattle 2025-Jul-22 23:40:29 user") +
  ggplot2::ggtitle("Distribution of Income (sample)") +
  ggplot2::labs(y="Density")

# Display the plots.

gridExtra::grid.arrange(p01)
```

**Histogram of Income**

The histogram of `Income` shows a **right-skewed distribution**, where most individuals earn between **₹10,000 and ₹30,000**. A few observations fall in the higher income range, indicating the presence of **high-income outliers**. This suggests that income levels vary widely across the sample, with a concentration of individuals in the **lower-to-middle income range**.

#### 2.1.3.4. Married

```{r echo=FALSE, comment=FALSE, message=FALSE}
library(Hmisc)
describe(crs$dataset$Married)


```

The `Married` variable indicates marital status in binary form, where `1` denotes **Married** and `0` denotes **Unmarried**. Out of 30 observations, **24 are Married**, which accounts for **80%** of the dataset.

#### 2.1.3.5. Children

```{r echo=FALSE, comment=FALSE, message=FALSE}

# Display box plots for the selected variables. 

# Use ggplot2 to generate box plot for Children

# Generate a box plot.

p01 <- crs %>%
  with(dataset[train,]) %>%
  ggplot2::ggplot(ggplot2::aes(y=Children)) +
  ggplot2::geom_boxplot(ggplot2::aes(x="All"), notch=TRUE, fill="grey") +
  ggplot2::stat_summary(ggplot2::aes(x="All"), fun.y=mean, geom="point", shape=8) +
  ggplot2::xlab("Rattle 2025-Jul-16 23:49:29 user") +
  ggplot2::ggtitle("Distribution of Children (sample)") +
  ggplot2::theme(legend.position="none")

# Display the plots.

gridExtra::grid.arrange(p01)

```

**Box Plot of Children**\
\
The box plot of `Children` reveals a **median of 1**, with most values ranging between **0 and 2**. There are **no extreme outliers**, and the data indicates **small family sizes**.

```{r echo=FALSE, comment=FALSE, message=FALSE}

# Display histogram plots for the selected variables. 

# Use ggplot2 to generate histogram plot for Children

# Generate the plot.

p01 <- crs %>%
  with(dataset[train,]) %>%
  dplyr::select(Children) %>%
  ggplot2::ggplot(ggplot2::aes(x=Children)) +
  ggplot2::geom_density(lty=3) +
  ggplot2::xlab("Children\n\nRattle 2025-Jul-16 23:49:36 user") +
  ggplot2::ggtitle("Distribution of Children (sample)") +
  ggplot2::labs(y="Density")

# Display the plots.

gridExtra::grid.arrange(p01)
```

**Histogram of Children**

The histogram shows that having **0, 1, or 2 children** is most common in the dataset. The **highest frequency is at 1 child**, reflecting a trend toward **smaller households**.

#### 2.1.3.6. Loan

```{r echo=FALSE, comment=FALSE, message=FALSE}

library(Hmisc)
describe(crs$dataset$Loan)

```

The `Loan` variable indicates whether a loan was **approved (1)** or **not approved (0)**. Out of 30 total records, **13 have loans approved**, which is **43.33%** of the dataset. This suggests that **less than half** of the individuals in the dataset received a loan.

#### 2.1.3.7. Mortgage

```{r echo=FALSE, comment=FALSE, message=FALSE}
library(Hmisc)
describe(crs$dataset$Mortgage)

```

The `Mortgage` variable represents whether a person **has a mortgage (1)** or **does not have one (0)**. Out of **30 individuals**, **12 people** have a mortgage, which is **40%** of the dataset. This indicates that **less than half** of the individuals in the dataset have taken a mortgage.

### 2.1.4 Clustering Analysis of DemoKTC Dataset Using Manhattan and Canberra Distance Methods

```{r echo=FALSE, comment=FALSE, message=FALSE}

#1
# Please change the path of the file as per your pc
library(readxl)
DemoKTC <- read_excel("C:/Users/user/Desktop/MBA-1st Term/IBA/DemoKTC.xlsx")
mydata<-scale(DemoKTC)
d <- dist(mydata, method = "manhattan") # distance matrix
fit <- hclust(d, method="ward") # Clustering
plot(fit) # display dendogram
groups <- cutree(fit, k=5) # cut tree into 5 clusters
#draw dendogram with red borders around the 5 clusters
rect.hclust(fit, k=3, border="red")


#2

library(factoextra)
library(cluster)
library(readxl, quietly=TRUE)
mydata<- DemoKTC
data <- scale(mydata)  
fviz_nbclust(data, kmeans, method = "wss")
set.seed(123)  # For reproducibility
km <- kmeans(data, centers = 3, nstart = 25)
set.seed(123)  # For reproducibility
km <- kmeans(data, centers = 3, nstart = 25)
fviz_cluster(km, data)
data2<-data# duplicating the data
data2$cluster<-km$cluster# writing the cluster membership in to the data
data2$cluster


#3

# Rattle timestamp: 2025-07-17 12:27:46.081723 x86_64-w64-mingw32 

# KMeans 

# Reset the random number seed to obtain the same results each time.

set.seed(crv$seed)

# The 'reshape' package provides the 'rescaler' function.

library(reshape, quietly=TRUE)

# Generate a kmeans cluster of size 3.

crs$kmeans <- kmeans(sapply(na.omit(crs$dataset[, crs$numeric]), rescaler, "range"), 3)



#4
# Rattle timestamp: 2025-07-17 12:27:46.252969 x86_64-w64-mingw32 

# Report on the cluster characteristics. 

# Cluster sizes:

paste(crs$kmeans$size, collapse=' ')

# Data means:

colMeans(sapply(na.omit(crs$dataset[, crs$numeric]), rescaler, "range"))

# Cluster centers:

crs$kmeans$centers

# Within cluster sum of squares:

crs$kmeans$withinss

# Time taken: 0.00 secs

# Generate a discriminant coordinates plot.

cluster::clusplot(na.omit(crs$dataset[, intersect(crs$input, crs$numeric)]), crs$kmeans$cluster, color=TRUE, shade=TRUE, main='Discriminant Coordinates DemoKTC.xlsx')


#5
data2<-mydata# duplicating the data
cluster_id<-as.vector(unlist(km$cluster))# writing the cluster membership in to the data
data2<-as.data.frame(cbind(data2,cluster_id))

# Group data2 by cluster_id and compute mean for each group
group_means <- aggregate(. ~ cluster_id, data = data2, FUN = mean)

# Split the original data into a list of data frames by cluster_id
grouped_data <- split(data2, data2$cluster_id)

# If we specifically want 3 data sets, we can extract them like this:
data_cluster1 <- grouped_data[[1]]
data_cluster2 <- grouped_data[[2]]
data_cluster3 <- grouped_data[[3]]

# Optionally view the group means
print(group_means)


```

#### **Cluster Profiling Summary:**

-   **Cluster 1:** Lower values on most variables – possibly conservative or cost-sensitive group.

-   **Cluster 2:** High on variable 3 and 4 – possibly tech-savvy or performance-focused.

-   **Cluster 3:** High on variable 2, lower on variable 3 – likely a balanced preference group.

## 3. Insights and Discussion

The analysis reveals that the dataset is dominated by middle-aged individuals, mostly in the range of 35 to 55 years. This indicates that marketing messages emphasizing stability, financial planning, and family security may resonate well with the majority. The income distribution, which is skewed towards the lower to middle range, but with the presence of high-income outliers, suggests that there is room for dual strategies: affordable and value-based offerings for the majority, and premium products for the smaller high-income group. The overwhelming proportion of married individuals indicates that family-oriented offerings, such as family insurance packages, bundled services, or family-centric promotions, could be highly effective. With about 40 to 45 percent of individuals having loans or mortgages, cross-selling financial services and debt management products becomes a strong opportunity.

The cluster analysis strengthens these insights by showing that customers fall broadly into three categories: conservative low spenders, financially active families, and independent professionals. Each of these groups presents unique needs, and tailoring marketing strategies accordingly can significantly improve efficiency and effectiveness.

## 4. Conclusion

This project demonstrates how market segmentation can be applied using demographic and financial data. The combination of descriptive analysis and clustering reveals three meaningful customer segments, each with distinct characteristics and needs. Businesses that adapt their marketing strategies to these groups can expect better customer targeting, improved satisfaction, and stronger sales growth. In summary, segmentation has proven to be a powerful tool for understanding consumer diversity and aligning business strategies with customer needs.
